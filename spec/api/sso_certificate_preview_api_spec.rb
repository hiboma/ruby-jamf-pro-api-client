=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::SsoCertificatePreviewApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SsoCertificatePreviewApi' do
  before do
    # run before each test
    @api_instance = JamfPro::SsoCertificatePreviewApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SsoCertificatePreviewApi' do
    it 'should create an instance of SsoCertificatePreviewApi' do
      expect(@api_instance).to be_instance_of(JamfPro::SsoCertificatePreviewApi)
    end
  end

  # unit tests for v1_sso_cert_delete
  # Delete the currently configured certificate used by SSO 
  # Deletes the currently configured certificate used by SSO.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_sso_cert_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_sso_cert_download_get
  # Download the certificate currently configured for use with Jamf Pro&#39;s SSO configuration 
  # Downloads the certificate currently configured for use with Jamf Pro&#39;s SSO configuration
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'v1_sso_cert_download_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_sso_cert_get
  # Retrieve the certificate currently configured for use with SSO 
  # Retrieves the certificate currently configured for use with SSO.
  # @param [Hash] opts the optional parameters
  # @return [SsoKeystoreWithDetails]
  describe 'v1_sso_cert_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_sso_cert_parse_post
  # Parse the certificate to get details about certificate type and keys needed to upload certificate file 
  # Parse the certificate to get details about certificate type and keys needed to upload certificate file.
  # @param sso_keystore_parse 
  # @param [Hash] opts the optional parameters
  # @return [SsoKeystoreCertParseResponse]
  describe 'v1_sso_cert_parse_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_sso_cert_post
  # Jamf Pro will generate a new certificate and use it to sign SSO 
  # Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider.
  # @param [Hash] opts the optional parameters
  # @return [SsoKeystoreWithDetails]
  describe 'v1_sso_cert_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_sso_cert_put
  # Update the certificate used by Jamf Pro to sign SSO requests to the identify provider 
  # Update the certificate used by Jamf Pro to sign SSO requests to the identify provider.
  # @param sso_keystore 
  # @param [Hash] opts the optional parameters
  # @return [SsoKeystoreWithDetails]
  describe 'v1_sso_cert_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
