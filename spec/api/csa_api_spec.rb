=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::CsaApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CsaApi' do
  before do
    # run before each test
    @api_instance = JamfPro::CsaApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CsaApi' do
    it 'should create an instance of CsaApi' do
      expect(@api_instance).to be_instance_of(JamfPro::CsaApi)
    end
  end

  # unit tests for v1_csa_token_delete
  # Delete the CSA token exchange - This will disable Jamf Pro&#39;s ability to authenticate with cloud-hosted services 
  # Delete the CSA token exchange - This will disable Jamf Pro&#39;s ability to authenticate with cloud-hosted services 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_csa_token_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_csa_token_get
  # Get details regarding the CSA token exchange 
  # Get details regarding the CSA token exchange 
  # @param [Hash] opts the optional parameters
  # @return [CsaToken]
  describe 'v1_csa_token_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_csa_token_post
  # Initialize the CSA token exchange 
  # Initializes the CSA token exchange - This will allow Jamf Pro to authenticate with cloud-hosted services 
  # @param [Hash] opts the optional parameters
  # @option opts [JamfNationCredentials] :jamf_nation_credentials Jamf Nation username and password 
  # @return [CsaToken]
  describe 'v1_csa_token_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_csa_token_put
  # Re-initialize the CSA token exchange with new credentials 
  # Re-initialize the CSA token exchange with new credentials 
  # @param [Hash] opts the optional parameters
  # @option opts [JamfNationCredentials] :jamf_nation_credentials Jamf Nation username and password 
  # @return [CsaToken]
  describe 'v1_csa_token_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
