=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::EnrollmentCustomizationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EnrollmentCustomizationApi' do
  before do
    # run before each test
    @api_instance = JamfPro::EnrollmentCustomizationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EnrollmentCustomizationApi' do
    it 'should create an instance of EnrollmentCustomizationApi' do
      expect(@api_instance).to be_instance_of(JamfPro::EnrollmentCustomizationApi)
    end
  end

  # unit tests for v1_enrollment_customization_get
  # Retrieve sorted and paged Enrollment Customizations 
  # Retrieves sorted and paged Enrollment Customizations
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :size 
  # @option opts [Integer] :pagesize 
  # @option opts [Integer] :page_size 
  # @option opts [String] :sort Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort&#x3D;date:desc,name:asc 
  # @return [EnrollmentCustomizationSearchResults]
  describe 'v1_enrollment_customization_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_id_delete
  # Delete an Enrollment Customization with the supplied id 
  # Deletes an Enrollment Customization with the supplied id
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_enrollment_customization_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_id_get
  # Retrieve an Enrollment Customization with the supplied id 
  # Retrieves an Enrollment Customization with the supplied id
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @return [GetEnrollmentCustomization]
  describe 'v1_enrollment_customization_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_id_history_get
  # Get sorted and paged Enrollment Customization history objects 
  # Gets sorted and paged enrollment customization history objects
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :size 
  # @option opts [Integer] :pagesize 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the &#39;sort&#39; query param is duplicated for each sort criterion, e.g., ...&amp;sort&#x3D;name%2Casc&amp;sort&#x3D;date%2Cdesc
  # @return [HistorySearchResults]
  describe 'v1_enrollment_customization_id_history_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_id_history_post
  # Add Enrollment Customization history object notes 
  # Adds enrollment customization history object notes
  # @param id Enrollment Customization identifier
  # @param object_history_note History notes to create
  # @param [Hash] opts the optional parameters
  # @return [ObjectHistory]
  describe 'v1_enrollment_customization_id_history_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_id_prestages_get
  # Retrieve the list of Prestages using this Enrollment Customization 
  # Retrieves the list of Prestages using this Enrollment Customization
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @return [PrestageDependencies]
  describe 'v1_enrollment_customization_id_prestages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_id_put
  # Update an Enrollment Customization 
  # Updates an Enrollment Customization
  # @param id Enrollment Customization identifier
  # @param enrollment_customization Enrollment Customization to update
  # @param [Hash] opts the optional parameters
  # @return [GetEnrollmentCustomization]
  describe 'v1_enrollment_customization_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_images_post
  # Upload an image
  # Uploads an image
  # @param file The file to upload
  # @param [Hash] opts the optional parameters
  # @return [BrandingImageUrl]
  describe 'v1_enrollment_customization_images_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_enrollment_customization_post
  # Create an Enrollment Customization 
  # Create an enrollment customization
  # @param enrollment_customization Enrollment customization to create.
  # @param [Hash] opts the optional parameters
  # @return [GetEnrollmentCustomization]
  describe 'v1_enrollment_customization_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_get
  # Retrieve sorted and paged Enrollment Customizations 
  # Retrieves sorted and paged Enrollment Customizations
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort&#x3D;date:desc,name:asc 
  # @return [EnrollmentCustomizationSearchResultsV2]
  describe 'v2_enrollment_customizations_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_id_delete
  # Delete an Enrollment Customization with the supplied id 
  # Deletes an Enrollment Customization with the supplied id
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v2_enrollment_customizations_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_id_get
  # Retrieve an Enrollment Customization with the supplied id 
  # Retrieves an Enrollment Customization with the supplied id
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentCustomizationV2]
  describe 'v2_enrollment_customizations_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_id_history_get
  # Get sorted and paged Enrollment Customization history objects 
  # Gets sorted and paged enrollment customization history objects
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the &#39;sort&#39; query param is duplicated for each sort criterion, e.g., ...&amp;sort&#x3D;name%2Casc&amp;sort&#x3D;date%2Cdesc
  # @return [HistorySearchResults]
  describe 'v2_enrollment_customizations_id_history_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_id_history_post
  # Add Enrollment Customization history object notes 
  # Adds enrollment customization history object notes
  # @param id Enrollment Customization identifier
  # @param object_history_note History notes to create
  # @param [Hash] opts the optional parameters
  # @return [ObjectHistory]
  describe 'v2_enrollment_customizations_id_history_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_id_prestages_get
  # Retrieve the list of Prestages using this Enrollment Customization 
  # Retrieves the list of Prestages using this Enrollment Customization
  # @param id Enrollment Customization identifier
  # @param [Hash] opts the optional parameters
  # @return [PrestageDependencies]
  describe 'v2_enrollment_customizations_id_prestages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_id_put
  # Update an Enrollment Customization 
  # Updates an Enrollment Customization
  # @param id Enrollment Customization identifier
  # @param enrollment_customization_v2 Enrollment Customization to update
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentCustomizationV2]
  describe 'v2_enrollment_customizations_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_images_post
  # Upload an image
  # Uploads an image
  # @param file The file to upload
  # @param [Hash] opts the optional parameters
  # @return [BrandingImageUrl]
  describe 'v2_enrollment_customizations_images_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_customizations_post
  # Create an Enrollment Customization 
  # Create an enrollment customization
  # @param enrollment_customization_v2 Enrollment customization to create.
  # @param [Hash] opts the optional parameters
  # @return [HrefResponse]
  describe 'v2_enrollment_customizations_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
