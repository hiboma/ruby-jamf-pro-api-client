=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::EnrollmentApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EnrollmentApi' do
  before do
    # run before each test
    @api_instance = JamfPro::EnrollmentApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EnrollmentApi' do
    it 'should create an instance of EnrollmentApi' do
      expect(@api_instance).to be_instance_of(JamfPro::EnrollmentApi)
    end
  end

  # unit tests for v1_adue_session_token_settings_get
  # Retrieve the Account Driven User Enrollment Session Token Settings 
  # Retrieve the Account Driven User Enrollment Session Token Settings 
  # @param [Hash] opts the optional parameters
  # @return [AccountDrivenUserEnrollmentSessionTokenSettings]
  describe 'v1_adue_session_token_settings_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_adue_session_token_settings_put
  # Update Account Driven User Enrollment Session Token Settings. 
  # Update the Account Driven User Enrollment Session Token Settings object. 
  # @param account_driven_user_enrollment_session_token_settings Update Account Driven User Enrollment Session Token Settings.
  # @param [Hash] opts the optional parameters
  # @return [AccountDrivenUserEnrollmentSessionTokenSettings]
  describe 'v1_adue_session_token_settings_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_access_groups_get
  # Retrieve the configured LDAP groups configured for User-Initiated Enrollment 
  # Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: &#x60;property:asc/desc&#x60;. Default sort is &#x60;name:asc&#x60;. Multiple sort criteria are supported and must be separated with a comma. Example: &#x60;sort&#x3D;date:desc,name:asc&#x60;. 
  # @option opts [Boolean] :all_users_option_first Return \&quot;All LDAP Users\&quot; option on the first position if it is present in the current page
  # @return [AccessGroupsV2SearchResults]
  describe 'v2_enrollment_access_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_access_groups_post
  # Add the configured LDAP group for User-Initiated Enrollment. 
  # Add the configured LDAP group for User-Initiated Enrollment. 
  # @param enrollment_access_group_v2 Configured LDAP group to create.
  # @param [Hash] opts the optional parameters
  # @return [HrefResponse]
  describe 'v2_enrollment_access_groups_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_access_groups_server_id_group_id_delete
  # Delete an LDAP group&#39;s access to user initiated Enrollment 
  # Deletes an LDAP group&#39;s access to user initiated enrollment. The group \&quot;All LDAP Users\&quot; cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.
  # @param server_id LDAP server id
  # @param group_id LDAP group id.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v2_enrollment_access_groups_server_id_group_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_access_groups_server_id_group_id_get
  # Retrieve the configured LDAP groups configured for User-Initiated Enrollment 
  # Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
  # @param server_id LDAP server id.
  # @param group_id LDAP group id.
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentAccessGroupV2]
  describe 'v2_enrollment_access_groups_server_id_group_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_access_groups_server_id_group_id_put
  # Modify the configured LDAP groups configured for User-Initiated Enrollment 
  # Modifies the configured LDAP groups configured for User-Initiated Enrollment.
  # @param server_id LDAP server id.
  # @param group_id LDAP group id.
  # @param [Hash] opts the optional parameters
  # @option opts [EnrollmentAccessGroupV2] :enrollment_access_group_v2 
  # @return [EnrollmentAccessGroupV2]
  describe 'v2_enrollment_access_groups_server_id_group_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_filtered_language_codes_get
  # Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment 
  # Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.
  # @param [Hash] opts the optional parameters
  # @return [Array<LanguageCode>]
  describe 'v2_enrollment_filtered_language_codes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_get
  # Get Enrollment object and Re-enrollment settings 
  # Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for &#x60;managementPassword&#x60;: &#x60;\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff&#x60;. 
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentSettingsV2]
  describe 'v2_enrollment_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_history_export_post
  # Export enrollment history collection 
  # Export enrollment history collection 
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :export_fields Export fields parameter, used to change default order or ignore some of the response properties. Default is empty array, which means that all fields of the response entity will be serialized. Example: export-fields&#x3D;id,username
  # @option opts [Array<String>] :export_labels Export labels parameter, used to customize fieldnames/columns in the exported file. Default is empty array, which means that response properties names will be used. Number of the provided labels must match the number of export-fields Example: export-labels&#x3D;identifier,name with matching: export-fields&#x3D;id,username
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort&#x3D;id:desc,name:asc 
  # @option opts [String] :filter Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name&#x3D;&#x3D;\&quot;*script*\&quot;
  # @option opts [ExportParameters] :export_parameters Optional. Override query parameters since they can make URI exceed 2,000 character limit.
  # @return [Object]
  describe 'v2_enrollment_history_export_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_history_get
  # Get sorted and paged Enrollment history object 
  # Gets sorted and paged Enrollment history object 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: &#x60;property:asc/desc&#x60;. Default sort is &#x60;date:desc&#x60;. Multiple sort criteria are supported and must be separated with a comma. Example: &#x60;sort&#x3D;date:desc,name:asc&#x60;. 
  # @return [HistorySearchResults]
  describe 'v2_enrollment_history_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_history_post
  # Add Enrollment history object notes 
  # Adds Enrollment history object notes 
  # @param object_history_note history notes to create
  # @param [Hash] opts the optional parameters
  # @return [HrefResponse]
  describe 'v2_enrollment_history_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_language_codes_get
  # Retrieve the list of languages and corresponding ISO 639-1 Codes 
  # Retrieves the list of languages and corresponding ISO 639-1 Codes.
  # @param [Hash] opts the optional parameters
  # @return [Array<LanguageCode>]
  describe 'v2_enrollment_language_codes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_languages_delete_multiple_post
  # Delete multiple configured languages from User-Initiated Enrollment settings 
  # Delete multiple configured languages from User-Initiated Enrollment settings
  # @param ids ids of each language to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v2_enrollment_languages_delete_multiple_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_languages_get
  # Get an array of the language codes that have Enrollment messaging 
  # Returns an array of the language codes that have enrollment messaging currently configured.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property:asc/desc. Default sort is &#x60;languageCode:asc&#x60;. Multiple sort criteria are supported and must be separated with a comma. Example: &#x60;sort&#x3D;date:desc,name:asc&#x60;. 
  # @return [ProcessTextsSearchResults]
  describe 'v2_enrollment_languages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_languages_language_id_delete
  # Delete the Enrollment messaging for a language 
  # Delete the enrollment messaging for a language.
  # @param language_id Two letter ISO 639-1 Language Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v2_enrollment_languages_language_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_languages_language_id_get
  # Retrieve the Enrollment messaging for a language 
  # Retrieves the enrollment messaging for a language.
  # @param language_id Two letter ISO 639-1 Language Code
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentProcessTextObject]
  describe 'v2_enrollment_languages_language_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_languages_language_id_put
  # Edit Enrollment messaging for a language 
  # Edit enrollment messaging for a language.
  # @param language_id Two letter ISO 639-1 Language Code
  # @param [Hash] opts the optional parameters
  # @option opts [EnrollmentProcessTextObject] :enrollment_process_text_object 
  # @return [EnrollmentProcessTextObject]
  describe 'v2_enrollment_languages_language_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v2_enrollment_put
  # Update Enrollment object 
  # Update enrollment object. Regarding the &#x60;developerCertificateIdentity&#x60;, if this object is omitted, the certificate will not be deleted from Jamf Pro. The &#x60;identityKeystore&#x60; is the entire cert file as a base64 encoded string. The &#x60;md5Sum&#x60; field is not required in the PUT request, but is calculated and returned in the response. 
  # @param enrollment_settings_v2 Update enrollment
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentSettingsV2]
  describe 'v2_enrollment_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_access_groups_get
  # Retrieve the configured LDAP groups configured for User-Initiated Enrollment. 
  # Retrieves the configured LDAP groups configured for User-Initiated Enrollment. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: &#x60;property:asc/desc&#x60;. Default sort is &#x60;name:asc&#x60;. Multiple sort criteria are supported and must be separated with a comma. Example: &#x60;sort&#x3D;date:desc,name:asc&#x60;. 
  # @option opts [Boolean] :all_users_option_first Return \&quot;All LDAP Users\&quot; option on the first position if it is present in the current page
  # @return [AccessGroupsPreviewSearchResults]
  describe 'v3_enrollment_access_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_access_groups_id_delete
  # Delete an LDAP group&#39;s access to user initiated Enrollment. 
  # Deletes an LDAP group&#39;s access to user initiated enrollment. The group \&quot;All LDAP Users\&quot; cannot be deleted, but it can be modified to disallow User-Initiated Enrollment.
  # @param id Autogenerated Access Group ID.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v3_enrollment_access_groups_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_access_groups_id_get
  # Retrieve the configured LDAP groups configured for User-Initiated Enrollment 
  # Retrieves the configured LDAP groups configured for User-Initiated Enrollment.
  # @param id Autogenerated Access Group ID.
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentAccessGroupPreview]
  describe 'v3_enrollment_access_groups_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_access_groups_id_put
  # Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated. 
  # Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated. 
  # @param id Autogenerated Access Group ID.
  # @param enrollment_access_group_preview 
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentAccessGroupPreview]
  describe 'v3_enrollment_access_groups_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_access_groups_post
  # Add the configured LDAP group for User-Initiated Enrollment. 
  # Add the configured LDAP group for User-Initiated Enrollment. 
  # @param enrollment_access_group_preview Configured LDAP group to create.
  # @param [Hash] opts the optional parameters
  # @return [HrefResponse]
  describe 'v3_enrollment_access_groups_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_filtered_language_codes_get
  # Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment 
  # Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.
  # @param [Hash] opts the optional parameters
  # @return [Array<LanguageCode>]
  describe 'v3_enrollment_filtered_language_codes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_language_codes_get
  # Retrieve the list of languages and corresponding ISO 639-1 Codes 
  # Retrieves the list of languages and corresponding ISO 639-1 Codes.
  # @param [Hash] opts the optional parameters
  # @return [Array<LanguageCode>]
  describe 'v3_enrollment_language_codes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_languages_delete_multiple_post
  # Delete multiple configured languages from User-Initiated Enrollment settings 
  # Delete multiple configured languages from User-Initiated Enrollment settings
  # @param ids ids of each language to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v3_enrollment_languages_delete_multiple_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_languages_get
  # Get an array of the language codes that have Enrollment messaging 
  # Returns an array of the language codes that have enrollment messaging currently configured.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property:asc/desc. Default sort is &#x60;languageCode:asc&#x60;. Multiple sort criteria are supported and must be separated with a comma. Example: &#x60;sort&#x3D;date:desc,name:asc&#x60;. 
  # @return [ProcessTextsSearchResults]
  describe 'v3_enrollment_languages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_languages_language_id_delete
  # Delete the Enrollment messaging for a language 
  # Delete the enrollment messaging for a language.
  # @param language_id Two letter ISO 639-1 Language Code
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v3_enrollment_languages_language_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_languages_language_id_get
  # Retrieve the Enrollment messaging for a language 
  # Retrieves the enrollment messaging for a language.
  # @param language_id Two letter ISO 639-1 Language Code
  # @param [Hash] opts the optional parameters
  # @return [EnrollmentProcessTextObject]
  describe 'v3_enrollment_languages_language_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v3_enrollment_languages_language_id_put
  # Edit Enrollment messaging for a language 
  # Edit enrollment messaging for a language.
  # @param language_id Two letter ISO 639-1 Language Code
  # @param [Hash] opts the optional parameters
  # @option opts [EnrollmentProcessTextObject] :enrollment_process_text_object 
  # @return [EnrollmentProcessTextObject]
  describe 'v3_enrollment_languages_language_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
