=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::SupervisionIdentitiesPreviewApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SupervisionIdentitiesPreviewApi' do
  before do
    # run before each test
    @api_instance = JamfPro::SupervisionIdentitiesPreviewApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SupervisionIdentitiesPreviewApi' do
    it 'should create an instance of SupervisionIdentitiesPreviewApi' do
      expect(@api_instance).to be_instance_of(JamfPro::SupervisionIdentitiesPreviewApi)
    end
  end

  # unit tests for v1_supervision_identities_get
  # Search for sorted and paged Supervision Identities 
  # Search for sorted and paged supervision identities
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :size 
  # @option opts [Integer] :pagesize 
  # @option opts [Integer] :page_size 
  # @option opts [String] :sort Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort&#x3D;date:desc,name:asc 
  # @return [SupervisionIdentitySearchResults]
  describe 'v1_supervision_identities_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_supervision_identities_id_delete
  # Delete a Supervision Identity with the supplied id 
  # Deletes a Supervision Identity with the supplied id
  # @param id Supervision Identity identifier
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_supervision_identities_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_supervision_identities_id_download_get
  # Download the Supervision Identity .p12 file 
  # Download the Supervision Identity .p12 file
  # @param id Supervision Identity identifier
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'v1_supervision_identities_id_download_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_supervision_identities_id_get
  # Retrieve a Supervision Identity with the supplied id 
  # Retrieves a Supervision Identity with the supplied id
  # @param id Supervision Identity identifier
  # @param [Hash] opts the optional parameters
  # @return [SupervisionIdentity]
  describe 'v1_supervision_identities_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_supervision_identities_id_put
  # Update a Supervision Identity with the supplied information 
  # Updates a Supervision Identity with the supplied information
  # @param id Supervision Identity identifier
  # @param supervision_identity_update 
  # @param [Hash] opts the optional parameters
  # @return [SupervisionIdentity]
  describe 'v1_supervision_identities_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_supervision_identities_post
  # Create a Supervision Identity for the supplied information 
  # Creates a Supervision Identity for the supplied information
  # @param supervision_identity_create 
  # @param [Hash] opts the optional parameters
  # @return [SupervisionIdentity]
  describe 'v1_supervision_identities_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_supervision_identities_upload_post
  # Upload the Supervision Identity .p12 file 
  # Uploads the Supervision Identity .p12 file
  # @param supervision_identity_certificate_upload The base 64 encoded .p12 file alone with other needed information
  # @param [Hash] opts the optional parameters
  # @return [SupervisionIdentity]
  describe 'v1_supervision_identities_upload_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
