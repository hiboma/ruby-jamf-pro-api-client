=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::ComputerInventoryApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ComputerInventoryApi' do
  before do
    # run before each test
    @api_instance = JamfPro::ComputerInventoryApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ComputerInventoryApi' do
    it 'should create an instance of ComputerInventoryApi' do
      expect(@api_instance).to be_instance_of(JamfPro::ComputerInventoryApi)
    end
  end

  # unit tests for v1_computers_inventory_detail_id_get
  # Return all sections of a computer
  # Return all sections of a computer
  # @param id instance id of computer record
  # @param [Hash] opts the optional parameters
  # @return [ComputerInventory]
  describe 'v1_computers_inventory_detail_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_detail_id_patch
  # Update specific fields on a computer
  # Update specific fields on a computer, then return the updated computer object.
  # @param id instance id of computer record
  # @param computer_inventory_update_request 
  # @param [Hash] opts the optional parameters
  # @return [ComputerInventory]
  describe 'v1_computers_inventory_detail_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_get
  # Return paginated Computer Inventory records
  # Return paginated Computer Inventory records
  # @param [Hash] opts the optional parameters
  # @option opts [Array<ComputerSection>] :section section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section&#x3D;GENERAL&amp;section&#x3D;HARDWARE
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: &#x60;property:asc/desc&#x60;. Default sort is &#x60;general.name:asc&#x60;. Multiple sort criteria are supported and must be separated with a comma.  Fields allowed in the sort: &#x60;general.name&#x60;, &#x60;udid&#x60;, &#x60;id&#x60;, &#x60;general.assetTag&#x60;, &#x60;general.jamfBinaryVersion&#x60;, &#x60;general.lastContactTime&#x60;, &#x60;general.lastEnrolledDate&#x60;, &#x60;general.lastCloudBackupDate&#x60;, &#x60;general.reportDate&#x60;, &#x60;general.remoteManagement.managementUsername&#x60;, &#x60;general.mdmCertificateExpiration&#x60;, &#x60;general.platform&#x60;, &#x60;hardware.make&#x60;, &#x60;hardware.model&#x60;, &#x60;operatingSystem.build&#x60;, &#x60;operatingSystem.name&#x60;, &#x60;operatingSystem.version&#x60;, &#x60;userAndLocation.realname&#x60;, &#x60;purchasing.lifeExpectancy&#x60;, &#x60;purchasing.warrantyDate&#x60;  Example: &#x60;sort&#x3D;udid:desc,general.name:asc&#x60;. 
  # @option opts [String] :filter Query in the RSQL format, allowing to filter computer inventory collection. Default filter is empty query - returning all results for the requested page.  Fields allowed in the query: &#x60;general.name&#x60;, &#x60;udid&#x60;, &#x60;id&#x60;, &#x60;general.assetTag&#x60;, &#x60;general.barcode1&#x60;, &#x60;general.barcode2&#x60;, &#x60;general.enrolledViaAutomatedDeviceEnrollment&#x60;, &#x60;general.lastIpAddress&#x60;, &#x60;general.itunesStoreAccountActive&#x60;, &#x60;general.jamfBinaryVersion&#x60;, &#x60;general.lastContactTime&#x60;, &#x60;general.lastEnrolledDate&#x60;, &#x60;general.lastCloudBackupDate&#x60;, &#x60;general.reportDate&#x60;, &#x60;general.lastReportedIp&#x60;, &#x60;general.remoteManagement.managed&#x60;, &#x60;general.remoteManagement.managementUsername&#x60;, &#x60;general.mdmCapable.capable&#x60;, &#x60;general.mdmCertificateExpiration&#x60;, &#x60;general.platform&#x60;, &#x60;general.supervised&#x60;, &#x60;general.userApprovedMdm&#x60;, &#x60;hardware.bleCapable&#x60;, &#x60;hardware.macAddress&#x60;, &#x60;hardware.make&#x60;, &#x60;hardware.model&#x60;, &#x60;hardware.modelIdentifier&#x60;, &#x60;hardware.serialNumber&#x60;, &#x60;hardware.supportsIosAppInstalls&#x60;,&#x60;hardware.isAppleSilicon&#x60;, &#x60;operatingSystem.activeDirectoryStatus&#x60;, &#x60;operatingSystem.fileVault2Status&#x60;, &#x60;operatingSystem.build&#x60;, &#x60;operatingSystem.name&#x60;, &#x60;operatingSystem.version&#x60;, &#x60;operatingSystem.softwareUpdateDeviceId&#x60;, &#x60;security.activationLockEnabled&#x60;, &#x60;security.recoveryLockEnabled&#x60;,&#x60;security.firewallEnabled&#x60;,&#x60;userAndLocation.buildingId&#x60;, &#x60;userAndLocation.departmentId&#x60;, &#x60;userAndLocation.email&#x60;, &#x60;userAndLocation.realname&#x60;, &#x60;userAndLocation.phone&#x60;, &#x60;userAndLocation.position&#x60;,&#x60;userAndLocation.room&#x60;, &#x60;userAndLocation.username&#x60;, &#x60;purchasing.appleCareId&#x60;, &#x60;purchasing.lifeExpectancy&#x60;, &#x60;purchasing.purchased&#x60;, &#x60;purchasing.leased&#x60;, &#x60;purchasing.vendor&#x60;, &#x60;purchasing.warrantyDate&#x60;,  This param can be combined with paging and sorting. Example: &#x60;filter&#x3D;general.name&#x3D;&#x3D;\&quot;Orchard\&quot;&#x60; 
  # @return [ComputerInventorySearchResults]
  describe 'v1_computers_inventory_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_id_attachments_attachment_id_delete
  # Remove attachment
  # Remove attachment
  # @param id instance id of computer record
  # @param attachment_id instance id of attachment object
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_computers_inventory_id_attachments_attachment_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_id_attachments_attachment_id_get
  # Download attachment file
  # Download attachment file
  # @param id instance id of computer record
  # @param attachment_id instance id of attachment object
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'v1_computers_inventory_id_attachments_attachment_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_id_attachments_post
  # Upload attachment and assign to computer
  # Upload attachment and assign to computer
  # @param id instance id of computer record
  # @param file The file to upload
  # @param [Hash] opts the optional parameters
  # @return [HrefResponse]
  describe 'v1_computers_inventory_id_attachments_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_id_delete
  # Remove specified Computer record
  # Remove specified Computer record
  # @param id instance id of computer record
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'v1_computers_inventory_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_id_get
  # Return General section of a Computer
  # Return General section of a Computer
  # @param id instance id of computer record
  # @param [Hash] opts the optional parameters
  # @option opts [Array<ComputerSection>] :section section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section&#x3D;general&amp;section&#x3D;hardware
  # @return [ComputerInventory]
  describe 'v1_computers_inventory_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_computers_inventory_id_view_recovery_lock_password_get
  # Return a Computers Recovery Lock Password
  # Return a Computers Recovery Lock Password
  # @param id instance id of computer record
  # @param [Hash] opts the optional parameters
  # @return [ComputerInventoryRecoveryLockPasswordResponse]
  describe 'v1_computers_inventory_id_view_recovery_lock_password_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
