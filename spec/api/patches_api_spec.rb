=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::PatchesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PatchesApi' do
  before do
    # run before each test
    @api_instance = JamfPro::PatchesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PatchesApi' do
    it 'should create an instance of PatchesApi' do
      expect(@api_instance).to be_instance_of(JamfPro::PatchesApi)
    end
  end

  # unit tests for patch_id_get
  # Return Active Patch Summary 
  # Returns active patch summary.
  # @param id patch id
  # @param [Hash] opts the optional parameters
  # @return [ActivePatchSummary]
  describe 'patch_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_id_put
  # Update patch report 
  # Updates patch report.
  # @param id patch id
  # @param active_patch_summary Active patch summary.
  # @param [Hash] opts the optional parameters
  # @return [ActivePatchSummary]
  describe 'patch_id_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_id_versions_get
  # Return patch versions 
  # Returns patch versions.
  # @param id patch id
  # @param [Hash] opts the optional parameters
  # @return [Array<PatchVersion>]
  describe 'patch_id_versions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_obj_policy_id_get
  # Return Patch Policy Summary 
  # Returns patch policy summary.
  # @param id patch policy id
  # @param [Hash] opts the optional parameters
  # @return [PatchPolicySummary]
  describe 'patch_obj_policy_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_svc_disclaimer_agree_post
  # Accept Patch reporting disclaimer 
  # Accept Patch reporting disclaimer
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'patch_svc_disclaimer_agree_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
