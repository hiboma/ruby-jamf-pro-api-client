=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for JamfPro::EbooksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'EbooksApi' do
  before do
    # run before each test
    @api_instance = JamfPro::EbooksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EbooksApi' do
    it 'should create an instance of EbooksApi' do
      expect(@api_instance).to be_instance_of(JamfPro::EbooksApi)
    end
  end

  # unit tests for v1_ebooks_get
  # Get Ebook object 
  # Gets ebook object
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @option opts [Array<String>] :sort Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort&#x3D;date:desc,name:asc 
  # @return [EbookSearchResults]
  describe 'v1_ebooks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_ebooks_id_get
  # Get specified Ebook object 
  # Gets specified Ebook object 
  # @param id instance id of ebook record
  # @param [Hash] opts the optional parameters
  # @return [Ebook]
  describe 'v1_ebooks_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for v1_ebooks_id_scope_get
  # Get specified scope of Ebook object 
  # Gets specified scope of Ebook object 
  # @param id instance id of ebook record
  # @param [Hash] opts the optional parameters
  # @return [EbookScope]
  describe 'v1_ebooks_id_scope_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
