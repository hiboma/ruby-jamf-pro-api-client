=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'date'
require 'time'

module JamfPro
  class NotificationType
    APNS_CERT_REVOKED = "APNS_CERT_REVOKED".freeze
    APNS_CONNECTION_FAILURE = "APNS_CONNECTION_FAILURE".freeze
    APPLE_SCHOOL_MANAGER_T_C_NOT_SIGNED = "APPLE_SCHOOL_MANAGER_T_C_NOT_SIGNED".freeze
    BUILT_IN_CA_EXPIRED = "BUILT_IN_CA_EXPIRED".freeze
    BUILT_IN_CA_EXPIRING = "BUILT_IN_CA_EXPIRING".freeze
    BUILT_IN_CA_RENEWAL_FAILED = "BUILT_IN_CA_RENEWAL_FAILED".freeze
    BUILT_IN_CA_RENEWAL_SUCCESS = "BUILT_IN_CA_RENEWAL_SUCCESS".freeze
    CLOUD_LDAP_CERT_EXPIRED = "CLOUD_LDAP_CERT_EXPIRED".freeze
    CLOUD_LDAP_CERT_WILL_EXPIRE = "CLOUD_LDAP_CERT_WILL_EXPIRE".freeze
    COMPUTER_SECURITY_SSL_DISABLED = "COMPUTER_SECURITY_SSL_DISABLED".freeze
    DEP_INSTANCE_EXPIRED = "DEP_INSTANCE_EXPIRED".freeze
    DEP_INSTANCE_WILL_EXPIRE = "DEP_INSTANCE_WILL_EXPIRE".freeze
    DEVICE_ENROLLMENT_PROGRAM_T_C_NOT_SIGNED = "DEVICE_ENROLLMENT_PROGRAM_T_C_NOT_SIGNED".freeze
    EXCEEDED_LICENSE_COUNT = "EXCEEDED_LICENSE_COUNT".freeze
    FREQUENT_INVENTORY_COLLECTION_POLICY = "FREQUENT_INVENTORY_COLLECTION_POLICY".freeze
    GSX_CERT_EXPIRED = "GSX_CERT_EXPIRED".freeze
    GSX_CERT_WILL_EXPIRE = "GSX_CERT_WILL_EXPIRE".freeze
    HCL_BIND_ERROR = "HCL_BIND_ERROR".freeze
    HCL_ERROR = "HCL_ERROR".freeze
    INSECURE_LDAP = "INSECURE_LDAP".freeze
    INVALID_REFERENCES_EXT_ATTR = "INVALID_REFERENCES_EXT_ATTR".freeze
    INVALID_REFERENCES_POLICIES = "INVALID_REFERENCES_POLICIES".freeze
    INVALID_REFERENCES_SCRIPTS = "INVALID_REFERENCES_SCRIPTS".freeze
    JAMF_CONNECT_UPDATE = "JAMF_CONNECT_UPDATE".freeze
    JAMF_PROTECT_UPDATE = "JAMF_PROTECT_UPDATE".freeze
    JIM_ERROR = "JIM_ERROR".freeze
    LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED = "LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED".freeze
    LDAP_CONNECTION_CHECK_THROUGH_JIM_SUCCESSFUL = "LDAP_CONNECTION_CHECK_THROUGH_JIM_SUCCESSFUL".freeze
    MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRED = "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRED".freeze
    MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING = "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING".freeze
    MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING_TODAY = "MDM_EXTERNAL_SIGNING_CERTIFICATE_EXPIRING_TODAY".freeze
    MII_HEARTBEAT_FAILED_NOTIFICATION = "MII_HEARTBEAT_FAILED_NOTIFICATION".freeze
    MII_INVENTORY_UPLOAD_FAILED_NOTIFICATION = "MII_INVENTORY_UPLOAD_FAILED_NOTIFICATION".freeze
    MII_UNATHORIZED_RESPONSE_NOTIFICATION = "MII_UNATHORIZED_RESPONSE_NOTIFICATION".freeze
    PATCH_EXTENTION_ATTRIBUTE = "PATCH_EXTENTION_ATTRIBUTE".freeze
    PATCH_UPDATE = "PATCH_UPDATE".freeze
    POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_MULTIPLE = "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_MULTIPLE".freeze
    POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_SINGLE = "POLICY_MANAGEMENT_ACCOUNT_PAYLOAD_SECURITY_SINGLE".freeze
    PUSH_CERT_EXPIRED = "PUSH_CERT_EXPIRED".freeze
    PUSH_CERT_WILL_EXPIRE = "PUSH_CERT_WILL_EXPIRE".freeze
    PUSH_PROXY_CERT_EXPIRED = "PUSH_PROXY_CERT_EXPIRED".freeze
    SSO_CERT_EXPIRED = "SSO_CERT_EXPIRED".freeze
    SSO_CERT_WILL_EXPIRE = "SSO_CERT_WILL_EXPIRE".freeze
    TOMCAT_SSL_CERT_EXPIRED = "TOMCAT_SSL_CERT_EXPIRED".freeze
    TOMCAT_SSL_CERT_WILL_EXPIRE = "TOMCAT_SSL_CERT_WILL_EXPIRE".freeze
    USER_INITIATED_ENROLLMENT_MANAGEMENT_ACCOUNT_SECURITY_ISSUE = "USER_INITIATED_ENROLLMENT_MANAGEMENT_ACCOUNT_SECURITY_ISSUE".freeze
    USER_MAID_DUPLICATE_ERROR = "USER_MAID_DUPLICATE_ERROR".freeze
    USER_MAID_MISMATCH_ERROR = "USER_MAID_MISMATCH_ERROR".freeze
    USER_MAID_ROSTER_DUPLICATE_ERROR = "USER_MAID_ROSTER_DUPLICATE_ERROR".freeze
    VPP_ACCOUNT_EXPIRED = "VPP_ACCOUNT_EXPIRED".freeze
    VPP_ACCOUNT_WILL_EXPIRE = "VPP_ACCOUNT_WILL_EXPIRE".freeze
    VPP_TOKEN_REVOKED = "VPP_TOKEN_REVOKED".freeze
    DEVICE_COMPLIANCE_CONNECTION_ERROR = "DEVICE_COMPLIANCE_CONNECTION_ERROR".freeze
    CONDITIONAL_ACCESS_CONNECTION_ERROR = "CONDITIONAL_ACCESS_CONNECTION_ERROR".freeze
    AZURE_AD_MIGRATION_REPORT_GENERATED = "AZURE_AD_MIGRATION_REPORT_GENERATED".freeze
    BEYOND_CORP_CONNECTION_ERROR = "BEYOND_CORP_CONNECTION_ERROR".freeze

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def self.build_from_hash(value)
      new.build_from_hash(value)
    end

    # Builds the enum from string
    # @param [String] The enum value in the form of the string
    # @return [String] The enum value
    def build_from_hash(value)
      constantValues = NotificationType.constants.select { |c| NotificationType::const_get(c) == value }
      raise "Invalid ENUM value #{value} for class #NotificationType" if constantValues.empty?
      value
    end
  end
end
