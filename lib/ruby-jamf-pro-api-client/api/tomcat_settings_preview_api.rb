=begin
#Jamf Pro API

### Overview The Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/> The swagger schema can be found [here](/api/schema/). 

The version of the OpenAPI document: production

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.1.0-SNAPSHOT

=end

require 'cgi'

module JamfPro
  class TomcatSettingsPreviewApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Generate a SSL Certificate using Jamf Certificate Authority 
    # generate a SSL Certificate using Jamf Certificate Authority
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def settings_issue_tomcat_ssl_certificate_post(opts = {})
      settings_issue_tomcat_ssl_certificate_post_with_http_info(opts)
      nil
    end

    # Generate a SSL Certificate using Jamf Certificate Authority 
    # generate a SSL Certificate using Jamf Certificate Authority
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def settings_issue_tomcat_ssl_certificate_post_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: TomcatSettingsPreviewApi.settings_issue_tomcat_ssl_certificate_post ...'
      end
      # resource path
      local_var_path = '/settings/issueTomcatSslCertificate'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Bearer']

      new_options = opts.merge(
        :operation => :"TomcatSettingsPreviewApi.settings_issue_tomcat_ssl_certificate_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: TomcatSettingsPreviewApi#settings_issue_tomcat_ssl_certificate_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
